(function() { 
	var a = window.ycframe || {};
	a.utils = a.utils || {}; 
	a.utils.RunServer = a.utils.RunServer || function(){};
	a.utils.RunServer.BaseClass = function(option) {
		var me = this;
		this.config = {
			Serverurl: '',
			Classname: ''
		};

		$.extend(this.config, option);
			
		this.Excute = function(functionname, vparams,runasync,callback) {  
			var result = null;
			var teparams = vparams;
			$.extend(teparams, {
				"command": "Excute"
			});
			$.extend(teparams, {
				"classname": this.config.Classname
			});
			$.extend(teparams, {
				"functionname": functionname
			});

			$.ajax(
				{
					url: me.config.Serverurl,
					type:'post',
					async: runasync,
					beforeSend: function (XMLHttpRequest) { 
						//var ss = ycframe.secure.encryptRSA(encodeURI(JSON.stringify(teparams)));
						XMLHttpRequest.setRequestHeader("ycframeheaderenstr", "");
						var timestamp = (new Date()).getTime();
						XMLHttpRequest.setRequestHeader("ycframeheadertime",ycframe.secure.encryptRSA(timestamp.toString())); 
					},
					data: teparams,dataType:'json',
					success: function(response) { 
						if(typeof(response) == "object"){
							if(response.hasOwnProperty("status") && response.hasOwnProperty("data")){
								if (response.status==1) {
									result = response.data; 
								}else{ 
									console.log(response);
								}
							}else{
								result = response;
								return result;
							}	 
						}

 
						try {
							var returnobject = jQuery.parseJSON(result);
							result = returnobject;  
						} catch(e) { 
							console.log("return data is not jsonstring.");
						}


						if(typeof(result) == "object"){
							if(runasync && $.isFunction(callback)){
								callback(result);
								return result;
							}  
						}else{
							return result;
						}																
					}
			});

			return result;
				 
		};


		this.runfunction = function() {
			/*alert("function is "+arguments[0]);
			alert("params is "+arguments[1]);
			for(var i=0;i<arguments[1].length;i++)
			{
				alert(arguments[1][i]+arguments[2][arguments[1][i]]);
			}*/

			if (arguments[0]==true) {
				$.ajax(
				{
					url: 'login/checkLogined',
					type:'post',
					async: false,
					dataType:'text',
					success: function(response) {
						var text = response;
					  	if(text=='0'){
							//console.log('登录检测===>',text) // 服务器响应内容
							//alert('超时，重新登录');
							//ycframe.app.logout();
						 }		
					}
				}); 			
			}


			result = this.Excute(arguments[1], arguments[3],false);
			return result;
			//alert("function is "+arguments[3]);
		};
		
		this.runfunctionasync = function() {
			/*alert("function is "+arguments[0]);
			alert("params is "+arguments[1]);
			for(var i=0;i<arguments[1].length;i++)
			{
				alert(arguments[1][i]+arguments[2][arguments[1][i]]);
			}*/
			if (arguments[0]==true) {
				$.ajax(
				{
					url: 'login/checkLogined',
					type:'post',
					async: true,
					dataType:'text',
					success: function(response) {
						var text = response;
					  	if(text=='0'){
							//console.log('登录检测===>',text) // 服务器响应内容
							//alert('超时，重新登录');
							//ycframe.app.logout();
						 }		
					}
				}); 			
			}
			result = this.Excute(arguments[1], arguments[3],true, arguments[4]);
			return result;
			//alert("function is "+arguments[3]);
		};
	};


	a.utils.RunServer.RunServerRouter = function(option) {
		this.option = $.extend({
			Serverurl: ''
		}, option);
		var me = this;

		this.Register = function() {
			$.ajax({
				async: false,
				url: me.option.Serverurl,
				type:'post',
				data: {
					command: "Register"
				},
				beforeSend: function (XMLHttpRequest) { 
						var ss = ycframe.secure.encryptRSA(JSON.stringify({
							command: "Register"
						}));
						XMLHttpRequest.setRequestHeader("ycframeheaderenstr", "");
						var timestamp = (new Date()).getTime();
						XMLHttpRequest.setRequestHeader("ycframeheadertime",ycframe.secure.encryptRSA(timestamp.toString())); 
				},
				success: function(response) {
					var text = response;
					var returnobject = jQuery.parseJSON(text);

					for(var i = 0; i < returnobject.length; i++) {
						var runserverclass = returnobject[i];
						var nclass = new ycframe.utils.RunServer.BaseClass({
							Serverurl: me.option.Serverurl,
							Classname: runserverclass.classname
						}); 
						eval(runserverclass.classname + "= nclass;");
						var functions = runserverclass.functions;
						var funString = "";
						for(var j = 0; j < functions.length; j++) {
							var afunction = functions[j];
							var funname = afunction.functionname;
							var checklogin = afunction.checklogined;
							var params = afunction.params;
							var paramString = "";
							var paramObjString = "";
							for(var k = 0; k < params.length; k++) {
								var param = params[k];
								var paramname = param.paramname;
								paramString = paramString + "\"" + paramname + "\"";
								paramObjString = paramObjString + "" + paramname + ":" + paramname + "";
								if(k < params.length - 1) {
									paramString = paramString + ",";
									paramObjString = paramObjString + ",";
								}
							}

							//var nfun = "YCFrame.Utils.RunServer.ServerScript."+runserverclass.classname+"."+funname+" = function("+paramString.replace(/"/g,"")+"){return this.runfunction(\""+funname+"\",["+paramString+"],{"+paramObjString+"});};";
							//eval(nfun);
							if (checklogin==true) {
								var nfun = runserverclass.classname + "." + funname + " = function(" + paramString.replace(/"/g, "") + (paramString.length>0?",callback)":"callback)")+"{if($.isFunction(callback)){ return    this.runfunctionasync(true,\"" + funname + "\",[" + paramString + "],{" + paramObjString + "},callback); } else return this.runfunction(true,\"" + funname + "\",[" + paramString + "],{" + paramObjString + "});};";
								eval(nfun);
							}else
							{
								var nfun = runserverclass.classname + "." + funname + " = function(" + paramString.replace(/"/g, "") + (paramString.length>0?",callback)":"callback)")+"{if($.isFunction(callback)){ return    this.runfunctionasync(false,\"" + funname + "\",[" + paramString + "],{" + paramObjString + "},callback); } else return this.runfunction(false,\"" + funname + "\",[" + paramString + "],{" + paramObjString + "});};";
								eval(nfun);
							}

		//					
		//					var nfun2 = "Java." + runserverclass.classname + "." + funname + " = function(" + paramString.replace(/"/g, "") + "){return this.runfunction(\"" + funname + "\",[" + paramString + "],{" + paramObjString + "});};";
		//					eval(nfun2);
							//eval("YCFrame.Utils.RunServer.ServerScript."+runserverclass.classname+"."+funname+"=function(){this.runfunction()}");
						}
						//alert(runserverclass.classname);
					}
				}
			});
		}
	};


	a.utils.RunServer.init = function(url)
	{ 
	    var RunServerRouter =  new ycframe.utils.RunServer.RunServerRouter({
	    	Serverurl:url
	    }); 
	    RunServerRouter.Register();
	};
 
	window.ycframe = a
})();